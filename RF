%% I. 清空环境变量
clear all 
clc

%%
X=xlsread('A',':');
%%X=cell2mat(struct2cell(X));
Y=xlsread('',':');%导入mat类型文件
%%Y=cell2mat(struct2cell(Y));
%% 导入数据
% 训练集—
P_train= X((1:B),:)';%冒号代表取出来是整行或者整列，'代表转置
P_test = X((B+1:end),:)';
M = size(P_train,2);
% 测试集—
T_train= Y((1:B),:)';
T_test = Y((B+1:end),:)';
N = size(T_test,2);
%% 数据归一化
[p_train, ps_input] = mapminmax(P_train,0,1);
p_test = mapminmax('apply',P_test,ps_input);

[t_train, ps_output] = mapminmax(T_train,0,1);
t_test = mapminmax('apply',T_test,ps_output);

%%  转置以适应模型
p_train = p_train'; p_test = p_test';
t_train = t_train'; t_test = t_test';

%% 创建随机森林
ntree = ;                   % number of trees (default is 500). 
mtry = ;                      % default is floor(sqrt(size(X,2))
% extra_options.sampsize = 80; % Size of sample to draw. 
% extra_options.nodesize = 5;  % Minimum size of terminal nodes.
% model = regRF_train(p_train,t_train,ntree,mtry,extra_options);
model = regRF_train(p_train,t_train,ntree,mtry);
model.importance;
%% 仿真测试
t_sim1 = regRF_predict(p_train,model);
t_sim2 = regRF_predict(p_test,model);

%% 数据反归一化
T_sim1 = mapminmax('reverse',t_sim1,ps_output);
T_sim2 = mapminmax('reverse',t_sim2,ps_output);

%%  均方根误差 RMSE
error1 = sqrt(sum((T_sim1' - T_train).^2)./M);
error2 = sqrt(sum((T_test - T_sim2').^2)./N);

%%
%决定系数
R1 = 1 - (sum((T_sim1' - T_train).^2) / sum((T_sim1' - mean(T_train)).^2));

R2 = 1 - (sum((T_sim2' - T_test).^2) / sum((T_sim2' - mean(T_test)).^2));

%%
%均方误差 MSE
mse1 = sum((T_sim1' - T_train).^2)./M;
mse2 = sum((T_sim2' - T_test).^2)./N;
%%
%RPD 剩余预测残差
SE1=std(T_sim1'-T_train);
RPD=std(T_train)/SE1;

SE=std(T_sim2'-T_test);
RPD1=std(T_test)/SE;
%% 平均绝对误差MAE
MAE1 = mean(abs(T_train - T_sim1'));
MAE2 = mean(abs(T_test - T_sim2'));
%% 平均绝对百分比误差MAPE
MAPE1 = mean(abs((T_train - T_sim1')./T_train));
MAPE2 = mean(abs((T_test - T_sim2')./T_test));
%%  训练集绘图
figure
%plot(1:M,T_train,'r-*',1:M,T_sim1,'b-o','LineWidth',1)
plot(1:M,T_train,'r-',1:M,T_sim1,'b-','LineWidth',1)
legend('真实值','预测值')
xlabel('预测样本')
ylabel('预测结果')
string={'训练集预测结果对比';['(R^2 =' num2str(R1) ' RMSE= ' num2str(error1) ' MSE= ' num2str(mse1) ' RPD= ' num2str(RPD) ')' ]};
title(string)
%% 预测集绘图
figure
plot(1:N,T_test,'r-',1:N,T_sim2,'b-','LineWidth',1)
legend('真实值','预测值')
xlabel('预测样本')
ylabel('预测结果')
string={'测试集预测结果对比';['(R^2 =' num2str(R2) ' RMSE= ' num2str(error2)  ' MSE= ' num2str(mse2) ' RPD1= ' num2str(RPD1) ')']};
title(string)
%% 打印出评价指标
disp(['-----------------------误差计算--------------------------'])
disp(['随机森林RF的预测集的评价结果如下所示：'])
disp(['平均绝对误差MAE为：',num2str(MAE1)])
disp(['均方误差MSE为：       ',num2str(mse1)])
disp(['均方根误差RMSEP为：  ',num2str(error1)])
disp(['决定系数R^2为：  ',num2str(R1)])
disp(['剩余预测残差RPD为：  ',num2str(RPD)])
disp(['平均绝对百分比误差MAPE为：  ',num2str(MAPE1)])
%% 重要性排序
figure
bar(model.importance);
xlabel('特征');
ylabel('特征的重要性');
